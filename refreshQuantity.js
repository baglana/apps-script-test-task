const WEBAPP_URL = 'https://script.google.com/macros/s/AKfycbx1yfGYp5C4r7-Fku_vlQRngSbSI5b8633n5Arn7Knu0PyPo0GlSJU8x630nGh6EdVDnw/exec' //URL –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
/**
 * –î–ª—è —Ä–µ—à–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∑–∞–¥–∞—á–∏ —Ä–∞–∑—Ä–µ—à–∞–µ—Ç—Å—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å –ª—é–±—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ç–µ–∫—É—â–∏–π –∫–æ–¥
 */

/**
 * –§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
 * @param {string} apiMethod 
 * @returns {object}
 */
function getRequestOptions_(method, access_token = ''){
  const payload = JSON.stringify({ //—Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞
    method, 
    access_token
  })

  const requestOptions = {
    method: 'POST',
    muteHttpExceptions: true,
    payload
  }

  return requestOptions
}



/**
 * –ú–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–µ—Ç–æ–¥—ã —á–µ—Ä–µ–∑ API
 */
function getAvailableMethods(){
  const requestOptions = getRequestOptions_('getMethods')
  const response = UrlFetchApp.fetch(WEBAPP_URL, requestOptions)
  Logger.log(response)
}

function getAccessToken() {
  const requestOptions = getRequestOptions_('getAccessToken')
  const response = UrlFetchApp.fetch(WEBAPP_URL, requestOptions)
  const json = JSON.parse(response);
  
  if (json?.status !== 'ok') {
    throw Error('error getting access token');
  }
  
  return json?.access_token;
}

function getAvailableItems() {
  const requestOptions = getRequestOptions_('getAvailableItems', getAccessToken())
  const response = UrlFetchApp.fetch(WEBAPP_URL, requestOptions)
  const json = JSON.parse(response);
  
  if (json?.status !== 'ok') {
    throw Error('error getting available items');
  }

  return json.items;
}



/* –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ */
function refreshQuantity(){
  const ss = SpreadsheetApp.getActive()
  
  ss.toast('–ù–∞—á–∞—Ç–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ!')
  /**
   * –ù–∞–ø–∏—à–∏—Ç–µ —Ä–µ—à–µ–Ω–∏–µ –∑–¥–µ—Å—å
   */

  // ss.toast('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!')

  const availableItems = getAvailableItems();

  const sh = ss.getSheetByName('–ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç');

  console.log(sh.getDataRange().getValues());
  
  const idRange = sh.getRange('A2:A');
  const targetRange = sh.getRange('D2:D');
  const targetValues = targetRange.getValues();

  idRange.getValues().forEach( (row, i) => {
    console.log('row', i)
    const ind = availableItems.findIndex((e) => {
      return e.id === row[0];
    });
    if (ind !== -1) {
      targetValues[i][0] = availableItems[ind].quantity;
    }
  });

  targetRange.setValues(targetValues);

  ss.toast('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!')
}

/**
 * –ü—Ä–æ—Å—Ç–æ–π —Ç—Ä–∏–≥–≥–µ—Ä
 * –ü—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ç–∞–±–ª–∏—Ü—ã —Ñ—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–µ—Ç –º–µ–Ω—é –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ —Ç–∞–±–ª–∏—Ü—ã
 */
function onOpen(){
  SpreadsheetApp
    .getUi()
    .createMenu('üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è')
    .addItem('üì• –ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Å—Ç–∞—Ç–∫–∞—Ö', 'refreshQuantity')
    .addToUi()
}
