const WEBAPP_URL = 'https://script.google.com/macros/s/AKfycbx1yfGYp5C4r7-Fku_vlQRngSbSI5b8633n5Arn7Knu0PyPo0GlSJU8x630nGh6EdVDnw/exec' //URL –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
/**
 * –î–ª—è —Ä–µ—à–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∑–∞–¥–∞—á–∏ —Ä–∞–∑—Ä–µ—à–∞–µ—Ç—Å—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å –ª—é–±—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ç–µ–∫—É—â–∏–π –∫–æ–¥
 */

/**
 * –§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
 * @param {string} apiMethod 
 * @returns {object}
 */
function getRequestOptions_(method, access_token = ''){
  const payload = JSON.stringify({ //—Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞
    method,
    access_token
  })

  const requestOptions = {
    method: 'POST',
    muteHttpExceptions: true,
    payload
  }

  return requestOptions
}



/**
 * –ú–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–µ—Ç–æ–¥—ã —á–µ—Ä–µ–∑ API
 */
function getAvailableMethods(){
  const requestOptions = getRequestOptions_('getMethods')
  const response = UrlFetchApp.fetch(WEBAPP_URL, requestOptions)
  Logger.log(response)
}



function getAccessToken() {
  try {
    const requestOptions = getRequestOptions_('getAccessToken')
    const response = UrlFetchApp.fetch(WEBAPP_URL, requestOptions)
    const data = JSON.parse(response.getContentText());

    if (data?.status !== 'ok') {
      throw new Error('error fetching access token: ' + data?.error);
    }

    return data?.access_token;
    
  } catch (err) {
    throw err;
  }
}



function getAvailableItems() {
  try {
    const requestOptions = getRequestOptions_('getAvailableItems', getAccessToken())
    const response = UrlFetchApp.fetch(WEBAPP_URL, requestOptions)
    const data = JSON.parse(response.getContentText());

    if (data?.status !== 'ok') {
      throw new Error('error fetching available items: ' + data?.error);
    }

    return data?.items;

  } catch (err) {
    throw err;
  }
}



/* –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ */
function refreshQuantity(){
  const ss = SpreadsheetApp.getActive()
  
  ss.toast('–ù–∞—á–∞—Ç–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ!')
  /**
   * –ù–∞–ø–∏—à–∏—Ç–µ —Ä–µ—à–µ–Ω–∏–µ –∑–¥–µ—Å—å
   */

  try {
    const availableItems = getAvailableItems();
    if (!availableItems || !availableItems.length) {
      return;
    }

    const stockSheet = ss.getSheetByName('–ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç');
    const stockRange = stockSheet.getDataRange();
    const stockValues = stockRange.getValues();
    const stockFormulas = stockRange.getFormulas();

    const ID_COLUMN = 0;
    const QUANTITY_COLUMN = 3;

    for (let row = 1; row < stockValues.length; row++) {

      const itemId = stockValues[row][ID_COLUMN];

      let availableItem;

      if (itemId !== '') {
        availableItem = availableItems.find((e) => {
          return e.id === itemId;
        });

        if (availableItem) {
          stockValues[row][QUANTITY_COLUMN] = availableItem.quantity;
        }
      } else {
        stockValues[row][QUANTITY_COLUMN] = '';
      }
      
      // fill sheet row values with formulas if there were any
      for (let col = 0; col < stockFormulas[0].length; col++) {
        if (stockFormulas[row][col]) {
          stockValues[row][col] = stockFormulas[row][col];
        }
      }

    }

    stockRange.setValues(stockValues);
    
    ss.toast('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!')

  } catch (err) {
    ss.toast('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞! ' + err.message)
    Logger.log(err);
  }
}



/**
 * –ü—Ä–æ—Å—Ç–æ–π —Ç—Ä–∏–≥–≥–µ—Ä
 * –ü—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ç–∞–±–ª–∏—Ü—ã —Ñ—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–µ—Ç –º–µ–Ω—é –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ —Ç–∞–±–ª–∏—Ü—ã
 */
function onOpen(){
  SpreadsheetApp
    .getUi()
    .createMenu('üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è')
    .addItem('üì• –ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Å—Ç–∞—Ç–∫–∞—Ö', 'refreshQuantity')
    .addToUi()
}
